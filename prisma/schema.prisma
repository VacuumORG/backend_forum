// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String
  password   String
  avatar_url String?
  topics     Topic[]
  comments   Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("users")
}

model Topic {
  id         String    @id @default(uuid())
  title      String
  content    String
  views      Int       @default(0)
  likes      Int       @default(0)
  images     String[]
  userId     String
  categoryId String?
  comments   Comment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt

  User       User      @relation(fields: [userId], references: [id])
  categories Category? @relation(fields: [categoryId], references: [id])

  @@map("topics")
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  Topic     Topic[]
  Tag       Tag[]

  @@map("categories")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  likes     Int      @default(0)
  userId    String
  topicId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  Topic Topic @relation(fields: [topicId], references: [id])
  User  User  @relation(fields: [userId], references: [id])

  @@map("comments")
}

model Tag {
  id         String   @id @default(uuid())
  name       String
  categoryId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  category Category @relation(fields: [categoryId], references: [id])

  @@map("tags")
}
